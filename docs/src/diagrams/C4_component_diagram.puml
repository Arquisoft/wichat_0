@startuml
!includeurl https://raw.githubusercontent.com/RicardoNiepel/C4-PlantUML/master/C4_Container.puml
!include <c4/C4_Container.puml>
!include <c4/C4_Component.puml>

title Container Diagram for the Wichat System (C4 Level 3)

AddElementTag("Person", $bgColor="#darkgreen", $fontColor="#white")
AddElementTag("Internal system", $bgColor="#darkseagreen", $fontColor="#003300")
AddElementTag("External system", $bgColor="#gray", $fontColor="#white")
AddElementTag("Database", $bgColor="#darkgreen", $fontColor="#white")
AddElementTag("Component", $bgColor="#darkolivegreen", $fontColor="#white")

' Containers
Person(player, "Player's Browser", "Preferred browser (Firefox, Chrome, Opera...)")

System_Boundary(wichat, "Wichat Application") {
Container(web_app, "Wichat Web Client", "React, JavaScript", "Runs in user's browser", $tags="Internal system")
Container(api_gateway, "Wichat API", "Node.js", "Single entry point for client requests", $tags="Internal system")

Container(backend, "Wichat Backend", "Node.js", "Handles business logic and API requests", $tags="Internal system") {
    Component(auth_module, "Auth Module", "Node.js", "Handles authentication and session management", $tags="Component")
    Component(game_module, "Game Module", "Node.js", "Handles game-related requests and updates", $tags="Component")
    Component(statistics_module, "Statistics Module", "Node.js", "Manages player statistics", $tags="Component")
    Component(question_module, "Question Module", "Node.js", "Manages question generation and retrieval", $tags="Component")
}

Container(question_generator, "Question Generator", "Node.js", "Generates questions from WikiData", $tags="Internal system")
Container(llm_ai_chat, "LLM AI Chat Service", "Node.js", "Handles AI chat for hints", $tags="Internal system")
ContainerDb(database, "Wichat Database", "MongoDB", "Stores all game and user data", $tags="Database")
}

System_Ext(wikidata, "WikiData API", "REST API", $tags="External system")
System_Ext(llm_api, "LLM API (Empathy)", "REST API", $tags="External system")

' Relations
Rel(player, web_app, "Uses", "HTTPS")
Rel(web_app, api_gateway, "Sends requests", "JSON, HTTPS")
Rel(api_gateway, auth_module, "Handles authentication requests", "JSON, HTTPS")
Rel(api_gateway, game_module, "Handles game interactions", "JSON, HTTPS")
Rel(api_gateway, statistics_module, "Retrieves statistics", "JSON, HTTPS")
Rel(api_gateway, llm_ai_chat, "Requests hints", "JSON, HTTPS")
Rel(api_gateway, question_module, "Fetches questions", "JSON, HTTPS")

Rel(question_generator, wikidata, "Fetches question data", "MQL, HTTPS")
Rel(llm_ai_chat, llm_api, "Sends prompts & receives responses", "JSON, HTTPS")
Rel(question_generator, database, "Stores questions", "JSON, MongoDB")

' Relations for backend modules
Rel(game_module, question_module, "Retrieves questions")
Rel(question_module, database, "Stores game data", "JSON, MongoDB")
Rel(statistics_module, database, "Stores player statistics", "JSON, MongoDB")
Rel(auth_module, database, "Stores user sessions", "JSON, MongoDB")
@enduml

