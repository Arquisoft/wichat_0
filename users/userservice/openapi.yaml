openapi: 3.0.3
info:
  title: User Service API
  description: API for managing users
  version: 1.0.0
servers:
  - url: http://localhost:8001
    description: Local server
paths:
  /users:
    post:
      summary: Create a new user
      operationId: createUser
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRequest'
      responses:
        '201':
          description: User created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
        '400':
          description: Bad request (missing fields, duplicate username, validation errors)
        '500':
          description: Internal server error
    get:
      summary: Get all users
      operationId: getUsers
      responses:
        '200':
          description: List of users
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserResponse'
        '500':
          description: Internal server error
  /users/{username}:
    get:
      summary: Get a user by username
      operationId: getUserByUsername
      parameters:
        - name: username
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: User found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
        '404':
          description: User not found
        '500':
          description: Internal server error
    patch:
      summary: Update a user by username
      operationId: updateUser
      parameters:
        - name: username
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserUpdateRequest'
      responses:
        '200':
          description: User updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
        '400':
          description: Bad request (duplicate username, validation errors, empty fields)
        '404':
          description: User not found
        '500':
          description: Internal server error
    delete:
      summary: Delete a user by username
      operationId: deleteUser
      parameters:
        - name: username
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: User deleted successfully
        '404':
          description: User not found
        '500':
          description: Internal server error
components:
  schemas:
    UserRequest:
      type: object
      required:
        - username
        - password
        - role
      properties:
        username:
          type: string
          example: testuser1
        password:
          type: string
          example: testpassword1
        role:
          type: string
          example: USER
    UserUpdateRequest:
      type: object
      properties:
        username:
          type: string
          example: updateduser
        password:
          type: string
          example: updatedpassword
        role:
          type: string
          example: ADMIN
    UserResponse:
      type: object
      properties:
        username:
          type: string
          example: testuser1
        role:
          type: string
          example: USER
        createdAt:
          type: string
          format: date-time
          example: '2023-03-06T12:34:56.789Z'
